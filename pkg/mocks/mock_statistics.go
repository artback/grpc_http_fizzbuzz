// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/artback/grpc_http_fizzbuzz/pkg/stats (interfaces: Statistics)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStatistics is a mock of Statistics interface.
type MockStatistics struct {
	ctrl     *gomock.Controller
	recorder *MockStatisticsMockRecorder
}

// MockStatisticsMockRecorder is the mock recorder for MockStatistics.
type MockStatisticsMockRecorder struct {
	mock *MockStatistics
}

// NewMockStatistics creates a new mock instance.
func NewMockStatistics(ctrl *gomock.Controller) *MockStatistics {
	mock := &MockStatistics{ctrl: ctrl}
	mock.recorder = &MockStatisticsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatistics) EXPECT() *MockStatisticsMockRecorder {
	return m.recorder
}

// GetMostUsed mocks base method.
func (m *MockStatistics) GetMostUsed(arg0 context.Context) (interface{}, uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostUsed", arg0)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(uint64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetMostUsed indicates an expected call of GetMostUsed.
func (mr *MockStatisticsMockRecorder) GetMostUsed(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostUsed", reflect.TypeOf((*MockStatistics)(nil).GetMostUsed), arg0)
}

// UpdateStats mocks base method.
func (m *MockStatistics) UpdateStats(arg0 context.Context, arg1 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateStats", arg0, arg1)
}

// UpdateStats indicates an expected call of UpdateStats.
func (mr *MockStatisticsMockRecorder) UpdateStats(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStats", reflect.TypeOf((*MockStatistics)(nil).UpdateStats), arg0, arg1)
}
